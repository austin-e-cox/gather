{"version":3,"sources":["reducers/authReducers.js","reducers/errorReducers.js","reducers/index.js","actions/types.js","store.js","utils/setAuthToken.js","actions/authActions.js","components/chat/UserPanel/index.js","components/chat/ChatLog/index.js","components/chat/InputArea/index.js","components/chat/ChatWindow/index.js","components/chat/Chat/index.js","components/profile/Profile.js","components/layout/Navbar.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","components/layout/Interest.js","components/layout/About.js","App.js","serviceWorker.js","index.js"],"names":["isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","type","payload","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","UserPanel","activeUsers","className","map","name","i","ChatLog","lastTypingTime","messageLog","messageItem","ind","userName","key","message","typing","sendMessage","socket","console","log","emit","JSON","stringify","InputArea","useState","setMessage","placeholder","value","onChange","e","target","Date","getTime","setTimeout","updateTypingStatus","onSubmit","preventDefault","onKeyPress","aria-hidden","ChatWindow","groupName","openSocket","connected","reconnect_attempt","Chat","props","this","length","ml","setState","slice","on","data","welcomeMessage","getParticipantsMessage","removeChatTyping","parse","users","filter","addChatTyping","React","Component","Profile","id","src","alt","href","Navbar","onLogoutClick","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","connect","Register","handleChange","event","handleSubmit","newUser","email","password","password2","registerUser","history","push","nextProps","noValidate","error","classnames","invalid","style","color","userData","post","then","res","catch","err","response","withRouter","Login","loginUser","htmlFor","emailnotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Dashboard","Interest","About","jwtToken","currentTime","now","exp","location","App","exact","path","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iXAEMA,EAAUC,EAAQ,IAElBC,EAAe,CACnBC,iBAAiB,EACjBC,KAAM,GACNC,SAAS,GCLLH,EAAe,GCENI,cAAgB,CAC7BC,KFKa,WAAwC,IAA/BC,EAA8B,uDAAtBN,EAAcO,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IGV4B,mBHW1B,OAAO,2BACFF,GADL,IAEEL,iBAAkBH,EAAQS,EAAOE,SACjCP,KAAMK,EAAOE,UAEjB,IGjBwB,eHkBtB,OAAO,2BACFH,GADL,IAEEH,SAAS,IAEb,QACE,OAAOG,IElBXI,ODFa,WAAwC,IAA/BJ,EAA8B,uDAAtBN,EAAcO,EAAQ,uCACpD,OAAQA,EAAOC,MACb,IENsB,aFOpB,OAAOD,EAAOE,QAChB,QACE,OAAOH,MGJPK,EAAa,CAACC,KASLC,EARDC,YACZC,EAHmB,GAKnBC,YACEC,IAAe,WAAf,EAAmBN,GACnBO,OAAOC,8BAAgCD,OAAOC,iC,kCCDnCC,EATM,SAAAC,GACfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,eCsCEC,EAAiB,SAAAC,GAC5B,MAAO,CACLnB,KH7C4B,mBG8C5BC,QAASkB,IAYAC,EAAa,kBAAM,SAAAC,GAE9BC,aAAaC,WAAW,YAExBX,GAAa,GAEbS,EAASH,EAAe,O,uEClBXM,MA5Cf,YAAmC,IAAfC,EAAc,EAAdA,YAElB,OACE,6BAEA,yBAAKC,UAAU,qBACX,yBAAKA,UAAU,aACf,yBAAKA,UAAU,eACf,yBAAKA,UAAU,WAEZD,EAAYE,KAAI,SAACC,EAAKC,GAAN,OACP,4BAAKD,Y,cCUVE,ICpBXC,EDoBWD,EAtBf,YAAgC,IAAdE,EAAa,EAAbA,WAEhB,OACE,6BACCA,IAAa,GACZ,yBAAKN,UAAU,WAAf,yBAEA,4BACCM,EAAWL,KAAI,SAACM,EAAaC,GAAd,MAES,KAAvBD,EAAYE,SACZ,wBAAIC,IAAKF,GAAMD,EAAYI,SAE3B,wBAAID,IAAKF,GAAMD,EAAYE,SAA3B,KAAuCF,EAAYI,e,QCZvDC,G,QAAS,GAGPC,EAAc,SAACJ,EAAUE,EAASG,GAElCH,GAEFI,QAAQC,IAAI,cAAeP,EAAUE,GACrCG,EAAOG,KAAK,cAAeC,KAAKC,UAAU,CACxCV,SAAUA,EACVE,QAASA,MA+DAS,MAtCf,YAAyC,IAArBX,EAAoB,EAApBA,SAAUK,EAAU,EAAVA,OAAU,EACRO,mBAAS,IADD,mBAC/BV,EAD+B,KACtBW,EADsB,KA4BtC,OACE,yBAAKtB,UAAU,YACL,yBAAKA,UAAU,mBACb,2BAAO1B,KAAK,OAAO0B,UAAU,YAAYuB,YAAY,iBAAiBC,MAAOb,EAASc,SAVxE,SAACC,GAE3BZ,EAAOG,KAAK,UACZK,EAAWI,EAAEC,OAAOH,OA5CG,SAACV,GACrBF,IACHA,GAAS,EACTG,QAAQC,IAAI,UACZF,EAAOG,KAAK,WAEdZ,GAAkB,IAAIuB,MAAQC,UAE9BC,YAAW,WACTf,QAAQC,IAAI,gBACO,IAAIY,MAAQC,UACFxB,GA3BL,KA4BeO,IACrCE,EAAOG,KAAK,eACZL,GAAS,KA9Ba,KA6DxBmB,CAAmBjB,IAM8GkB,SAlB9G,SAACN,GACpBA,EAAEO,iBACFpB,EAAYJ,EAAUE,EAASG,GAC/BF,GAAS,EACTE,EAAOG,KAAK,eACZK,EAAW,KAa8IY,WA7BpI,SAACR,GACR,UAAVA,EAAEhB,MAEJgB,EAAEO,iBACFpB,EAAYJ,EAAUE,EAASG,GAC/BF,GAAS,EACTE,EAAOG,KAAK,eACZK,EAAW,QAuBD,4BAAQtB,UAAU,eAAe1B,KAAK,UAAS,uBAAG0B,UAAU,oBAAoBmC,cAAY,aCnD7FC,MAff,YAAkE,IAA5C3B,EAA2C,EAA3CA,SAAqBH,GAAsB,EAAjC+B,UAAiC,EAAtB/B,YAAYQ,EAAU,EAAVA,OAErD,OACE,6BACA,yBAAKd,UAAU,SACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAASM,WAAYA,IACrB,kBAAC,EAAD,CAAWG,SAAUA,EAAUK,OAAQA,QCNzCA,EAASwB,IAAW,yBAEtBC,GAAY,EACZC,EAAoB,EAqKTC,E,kDAjKb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAIDtE,MAAQ,CACX2B,YAAa,CAAC,EAAK2C,MAAMjC,UACzBH,WAAY,IAPG,E,qEAYjB,IAAIK,EAAU,GAMd,OALsC,IAAlCgC,KAAKvE,MAAM2B,YAAY6C,OACzBjC,GAAW,uBAEXA,GAAW,aAAegC,KAAKvE,MAAM2B,YAAY6C,OAAS,gBAErDjC,I,sCAKP,IACIkC,EAAKF,KAAKvE,MAAMkC,WACF,IAAduC,EAAGD,OACLD,KAAKG,SAAL,2BAAkBH,KAAKvE,OAAvB,IAA8BkC,WAAY,CAAC,CAACG,SAAU,GAAIE,QAAS,4BAHvD,yBAKLkC,EAAGA,EAAGD,OAAO,GAAGjC,SACvBgC,KAAKG,SAAL,2BAAkBH,KAAKvE,OAAvB,IAA8BkC,WAAW,GAAD,mBAAMqC,KAAKvE,MAAMkC,YAAjB,CAA6B,CAACG,SAAU,GAAIE,QANxE,+B,yCAWd,IACIkC,EAAKF,KAAKvE,MAAMkC,WAEF,IAAduC,EAAGD,OACLD,KAAKG,SAAL,2BAAkBH,KAAKvE,OAAvB,IAA8BkC,WAAY,MAJ9B,yBAMLuC,EAAGA,EAAGD,OAAO,GAAGjC,SACvBgC,KAAKG,SAAL,2BAAkBH,KAAKvE,OAAvB,IAA8BkC,WAAW,YAAKuC,EAAGE,MAAM,EAAEF,EAAGD,OAAO,S,0CAMlD,IAAD,OAWlB9B,EAAOG,KAAK,WAAY0B,KAAKD,MAAMjC,UAInCK,EAAOkC,GAAG,SAAS,SAACC,GAElBlC,QAAQC,IAAI,UAAUiC,EAAK3C,YAC3BiC,GAAY,EAEZ,IAAI5B,EAAO,qBAAiB,EAAK+B,MAAML,WACnCa,EAAiB,EAAKC,yBACrBF,EAAK3C,aACR2C,EAAK3C,WAAa,IAEpB,EAAK8C,mBACLrC,QAAQC,IAAI,aACZ,EAAK8B,SAAS,CAAC/C,YAAakD,EAAKlD,YAAaO,WAAW,GAAD,mBAAM2C,EAAK3C,YAAX,CAAuB,CAACG,SAAU,GAAIE,QAASA,GAAU,CAACF,SAAU,GAAIE,QAASuC,UAO3IpC,EAAOkC,GAAG,eAAe,SAACC,GAExBA,EAAO/B,KAAKmC,MAAMJ,GAClB,EAAKG,mBACL,EAAKN,SAAL,2BAAkB,EAAK1E,OAAvB,IAA8BkC,WAAW,GAAD,mBAAM,EAAKlC,MAAMkC,YAAjB,CAA6B,CAACG,SAAUwC,EAAKxC,SAAUE,QAASsC,EAAKtC,iBAI/GG,EAAOkC,GAAG,eAAe,SAACC,GACxBA,EAAO/B,KAAKmC,MAAMJ,GAClBlC,QAAQC,IAAI,eACZ,IAAIL,EAAUsC,EAAKxC,SAAW,UAC9B,EAAK2C,mBACL,EAAKN,SAAL,2BAAkB,EAAK1E,OAAvB,IAA8B2B,YAAY,GAAD,mBAAM,EAAK3B,MAAM2B,aAAjB,CAA8BkD,EAAKxC,WAAWH,WAAW,GAAD,mBAAM,EAAKlC,MAAMkC,YAAjB,CAA6B,CAACG,SAAU,GAAIE,QAASA,WAIxJG,EAAOkC,GAAG,aAAa,SAACC,GAEtBlC,QAAQC,IAAI,aAEZ,IAAIL,GADJsC,EAAO/B,KAAKmC,MAAMJ,IACCxC,SAAW,QAC1B6C,EAAQ,EAAKlF,MAAM2B,YAAYwD,QAAO,SAAS/B,GAAQ,OAAOA,IAAUyB,EAAKxC,YACjF,EAAK2C,mBACL,EAAKN,SAAL,2BAAkB,EAAK1E,OAAvB,IAA8B2B,YAAauD,EAAOhD,WAAW,GAAD,mBAAM,EAAKlC,MAAMkC,YAAjB,CAA6B,CAACG,SAAU,GAAIE,QAASA,WAInHG,EAAOkC,GAAG,UAAU,SAACvC,GACnB,EAAK+C,cAAc/C,MAIrBK,EAAOkC,GAAG,eAAe,SAACvC,GACxB,EAAK2C,iBAAiB3C,MAGxBK,EAAOkC,GAAG,cAAc,WAEtB,EAAKF,SAAL,2BAAkB,EAAK1E,OAAvB,IAA8BkC,WAAW,GAAD,mBAAM,EAAKlC,MAAMkC,YAAjB,CAA6B,CAACG,SAAU,GAAIE,QADtE,sCAIhBG,EAAOkC,GAAG,aAAa,SAACC,GAGtBT,EAAoB,EACpB,EAAKM,SAAL,2BAAkB,EAAK1E,OAAvB,IAA8BkC,WAAW,GAAD,mBAAM,EAAKlC,MAAMkC,YAAjB,CAA6B,CAACG,SAAU,GAAIE,QAFtE,kCAGV,EAAK+B,MAAMjC,UACbK,EAAOG,KAAK,WAAY,EAAKyB,MAAMjC,aAIvCK,EAAOkC,GAAG,mBAAmB,YAE3BR,GAAqB,GACC,GACpB,EAAKM,SAAL,2BAAkB,EAAK1E,OAAvB,IAA8BkC,WAAW,GAAD,mBAAM,EAAKlC,MAAMkC,YAAjB,CAA6B,CAACG,SAAU,GAAIE,QAHxE,6C,+BAkBhB,OACE,yBAAKX,UAAU,OACb,kBAAC,EAAD,CAAWD,YAAa4C,KAAKvE,MAAM2B,cACnC,kBAAC,EAAD,CAAYsC,UAAWM,KAAKD,MAAML,UAAW5B,SAAUkC,KAAKD,MAAMjC,SAAU8B,UAAWA,EAAWzB,OAAQA,EAAQR,WAAYqC,KAAKvE,MAAMkC,kB,GA5J9HmD,IAAMC,W,OC+CVC,MAxDf,WACE,OAEF,6BAAS3D,UAAU,oGAAoG4D,GAAG,gBACpH,yBAAK5D,UAAU,aACf,yBAAKA,UAAU,iDACf,yBAAKA,UAAU,UAEf,yBAAKA,UAAU,gDACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,sDACb,yBAAK6D,IAAI,sEAAsEC,IAAI,GAAG9D,UAAU,6BAChG,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,yBAAd,gBACA,yBAAKA,UAAU,mBAAf,oQAGA,uBAAG+D,KAAK,IAAI/D,UAAU,4BACpB,uCACA,0BAAMA,UAAU,cAAhB,cAEF,uBAAG+D,KAAK,IAAI/D,UAAU,iCACpB,uCACA,0BAAMA,UAAU,cAAhB,iBAKR,wBAAIA,UAAU,QACd,wBAAIA,UAAU,gDACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,gBAAgB+D,KAAK,KAAlC,UAEF,wBAAI/D,UAAU,YACZ,uBAAGA,UAAU,gBAAgB+D,KAAK,KAAlC,gBAEF,wBAAI/D,UAAU,YACZ,uBAAGA,UAAU,gBAAgB+D,KAAK,KAAlC,cAEF,wBAAI/D,UAAU,YACZ,uBAAGA,UAAU,gBAAgB+D,KAAK,KAAlC,sBCtCRC,G,mNACJC,cAAgB,SAAAvC,GACdA,EAAEO,iBACF,EAAKS,MAAMhD,c,uDAIMiD,KAAKD,MAAMvE,KAApBH,KAER,OACE,yBAAKgC,UAAU,kEAAkE4D,GAAG,aAClF,yBAAK5D,UAAU,aACb,kBAAC,IAAD,CAAMA,UAAU,eAAekE,GAAG,KAAlC,UACA,4BAAQlE,UAAU,yBAAyB1B,KAAK,SAAS6F,cAAY,WAAWC,cAAY,oBAAoBC,gBAAc,sBAAsBC,gBAAc,QAAQC,aAAW,qBACnL,8BAAM,uBAAGvE,UAAU,kBAErB,yBAAKA,UAAU,2BAA2B4D,GAAG,oBAC3C,wBAAI5D,UAAU,sBACZ,wBAAIA,UAAU,YAAW,kBAAC,IAAD,CAAMA,UAAU,WAAWkE,GAAG,KAA9B,YACzB,wBAAIlE,UAAU,YAAW,kBAAC,IAAD,CAAMA,UAAU,WAAWkE,GAAG,UAA9B,aACzB,wBAAIlE,UAAU,YAAW,kBAAC,IAAD,CAAMA,UAAU,WAAWkE,GAAG,YAA9B,aAEa,IAApCvB,KAAKD,MAAMvE,KAAKJ,gBAEd,wBAAIiC,UAAU,wDAAwDwE,QAAS7B,KAAKsB,eAClF,kBAAC,IAAD,CAAMjE,UAAU,WAAWkE,GAAG,UAC5B,0BAAMlE,UAAU,qBAAhB,YAIJ,wBAAIA,UAAU,yDACZ,kBAAC,IAAD,CAAMA,UAAU,WAAWkE,GAAG,UAC5B,0BAAMlE,UAAU,qBAAhB,qB,GAhCD0D,cA+CNe,eAHS,SAAArG,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAIZ,CAAEuB,cAFW+E,CAGbT,G,wBCjDIU,E,kDACJ,aAAe,IAAD,8BACZ,gBAuBFC,aAAe,SAAAC,GACb,EAAK9B,SAAL,eAAiB8B,EAAMjD,OAAOiC,GAAKgB,EAAMjD,OAAOH,SAzBpC,EA4BdqD,aAAe,SAAAD,GACbA,EAAM3C,iBAEN,IAAM6C,EAAU,CACd5E,KAAM,EAAK9B,MAAM8B,KACjB6E,MAAO,EAAK3G,MAAM2G,MAClBC,SAAU,EAAK5G,MAAM4G,SACrBC,UAAW,EAAK7G,MAAM6G,WAGxB,EAAKvC,MAAMwC,aAAaJ,EAAS,EAAKpC,MAAMyC,UApC5C,EAAK/G,MAAQ,CACX8B,KAAM,GACN6E,MAAO,GACPC,SAAU,GACVC,UAAW,GACXzG,OAAQ,IAPE,E,gEAaRmE,KAAKD,MAAMvE,KAAKJ,iBAClB4E,KAAKD,MAAMyC,QAAQC,KAAK,gB,gDAIFC,GACpBA,EAAU7G,QACZmE,KAAKG,SAAS,CAAEtE,OAAQ6G,EAAU7G,W,+BAsB5B,IAAD,QACCA,EAAWmE,KAAKvE,MAAhBI,OAER,OACE,6BAASwB,UAAU,oGAAoG4D,GAAG,gBAC1H,yBAAK5D,UAAU,aACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,gBAAd,oBACA,yBAAKA,UAAU,eACb,uBAAGA,UAAU,QAAb,4OAGA,uBAAGA,UAAU,QAAO,kBAAC,IAAD,CAAMA,UAAU,qCAAqCkE,GAAG,UAAU,0BAAMlE,UAAU,iDAAhB,eAG1F,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,uCACb,0BAAMsF,YAAU,EAACtF,UAAU,8BAA8BgC,SAAUW,KAAKkC,cACtE,wBAAI7E,UAAU,yBAAd,oBACA,yBAAKA,UAAU,cACb,8BACE1B,KAAK,OACLiD,YAAY,YACZE,SAAUkB,KAAKgC,aACfnD,MAAOmB,KAAKvE,MAAM8B,KAClBqF,MAAO/G,EAAO0B,KACd0D,GAAG,QANL,qBAOO,QAPP,0BAQa4B,IAAW,oCAAqC,CACzDC,QAASjH,EAAO0B,QATpB,IAYA,0BAAMwF,MAAO,CAACC,MAAO,QAASnH,EAAO0B,OAEvC,yBAAKF,UAAU,cACb,8BACE1B,KAAK,OACLiD,YAAY,QACZE,SAAUkB,KAAKgC,aACfnD,MAAOmB,KAAKvE,MAAM2G,MAClBQ,MAAO/G,EAAOuG,MACdnB,GAAG,SANL,qBAOO,SAPP,0BAQa4B,IAAW,oCAAqC,CACzDC,QAASjH,EAAOuG,SATpB,IAYA,0BAAMW,MAAO,CAACC,MAAO,QAASnH,EAAOuG,QAEvC,yBAAK/E,UAAU,cACb,8BACE1B,KAAK,WACLiD,YAAY,WACZE,SAAUkB,KAAKgC,aACfnD,MAAOmB,KAAKvE,MAAM4G,SAClBO,MAAO/G,EAAOwG,SACdpB,GAAG,YANL,qBAOO,YAPP,0BAQa4B,IAAW,oCAAqC,CACzDC,QAASjH,EAAOwG,YATpB,IAYA,0BAAMU,MAAO,CAACC,MAAO,QAASnH,EAAOwG,WAEvC,yBAAKhF,UAAU,cACb,8BACE1B,KAAK,WACLiD,YAAY,mBACZE,SAAUkB,KAAKgC,aACfnD,MAAOmB,KAAKvE,MAAM6G,UAClBM,MAAO/G,EAAOyG,UACdrB,GAAG,aANL,qBAOO,YAPP,0BAQa4B,IAAW,oCAAqC,CACzDC,QAASjH,EAAOyG,aATpB,IAYA,0BAAMS,MAAO,CAACC,MAAO,QAASnH,EAAOyG,YAEvC,yBAAKjF,UAAU,cAEjB,4BAAQ1B,KAAK,SAAS0B,UAAU,iEAAhC,sB,GA9HW0D,aAoJRe,eALS,SAAArG,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAKd,CAAE0G,aRtJwB,SAACU,EAAUT,GAAX,OAAuB,SAAAxF,GACjDP,IACGyG,KAAK,sBAAuBD,GAC5BE,MAAK,SAAAC,GAAG,OAAIZ,EAAQC,KAAK,aACzBY,OAAM,SAAAC,GAAG,OACRtG,EAAS,CACPrB,KHbkB,aGclBC,QAAS0H,EAAIC,SAASjD,aQ6IfwB,CAGb0B,YAAWzB,ICvJP0B,E,kDACJ,aAAe,IAAD,8BACZ,gBA2BFzB,aAAe,SAAAC,GACb,EAAK9B,SAAL,eAAiB8B,EAAMjD,OAAOiC,GAAKgB,EAAMjD,OAAOH,SA7BpC,EAgCdqD,aAAe,SAAAD,GACbA,EAAM3C,iBAEN,IAAM2D,EAAW,CACfb,MAAO,EAAK3G,MAAM2G,MAClBC,SAAU,EAAK5G,MAAM4G,UAGvB,EAAKtC,MAAM2D,UAAUT,IAtCrB,EAAKxH,MAAQ,CACX2G,MAAO,GACPC,SAAU,GACVxG,OAAQ,IALE,E,gEAWRmE,KAAKD,MAAMvE,KAAKJ,iBAClB4E,KAAKD,MAAMyC,QAAQC,KAAK,gB,gDAIFC,GACpBA,EAAUlH,KAAKJ,iBAEjB4E,KAAKD,MAAMyC,QAAQC,KAAK,cAEtBC,EAAU7G,QACZmE,KAAKG,SAAS,CACZtE,OAAQ6G,EAAU7G,W,+BAoBd,IACAA,EAAWmE,KAAKvE,MAAhBI,OAER,OACE,oCAIN,6BAASwB,UAAU,oGAAoG4D,GAAG,gBACpH,yBAAK5D,UAAU,aACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,gBAAd,0BAEA,yBAAKA,UAAU,eACb,uBAAGA,UAAU,QAAb,yBAEA,kBAAC,IAAD,CAAMA,UAAU,SAASkE,GAAG,KAAI,0BAAMlE,UAAU,6CAAhB,qBAIpC,yBAAKA,UAAU,aAGf,yBAAKA,UAAU,uCAEb,0BAAOA,UAAU,8BAA8BsF,YAAU,EAACtD,SAAUW,KAAKkC,cACvE,wBAAI7E,UAAU,yBAAd,WAEA,yBAAKA,UAAU,cACf,2BAAOsG,QAAQ,SAAf,SACA,2BACA7E,SAAUkB,KAAKgC,aACfnD,MAAOmB,KAAKvE,MAAM2G,MAClBQ,MAAO/G,EAAOuG,MACdnB,GAAG,QACHtF,KAAK,QACL0B,UAAWwF,IAAW,oCAAqC,CACzDC,QAASjH,EAAOuG,OAASvG,EAAO+H,kBAGnC,0BAAMb,MAAO,CAACC,MAAO,QAASnH,EAAOuG,MAAOvG,EAAO+H,gBAElD,yBAAKvG,UAAU,cACf,2BAAOsG,QAAQ,YAAf,YACA,2BACA7E,SAAUkB,KAAKgC,aACfnD,MAAOmB,KAAKvE,MAAM4G,SAClBO,MAAO/G,EAAOwG,SACdpB,GAAG,WACHtF,KAAK,WACL0B,UAAWwF,IAAW,oCAAqC,CACzDC,QAASjH,EAAOwG,UAAYxG,EAAOgI,sBAGvC,0BAAMd,MAAO,CAACC,MAAO,QAASnH,EAAOwG,SAAUxG,EAAOgI,oBAIpD,yBAAKxG,UAAU,cACf,4BAAQ1B,KAAK,SAAS0B,UAAU,iEAAhC,oB,GAxGM0D,aAoILe,gBAJS,SAAArG,GAAK,MAAK,CAChCD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,UAId,CAAE6H,UTzHqB,SAAAT,GAAQ,OAAI,SAAAjG,GACnCP,IACGyG,KAAK,mBAAoBD,GACzBE,MAAK,SAAAC,GAAO,IAIH5G,EAAU4G,EAAI9C,KAAd9D,MACRS,aAAa6G,QAAQ,WAAYtH,GAEjCD,EAAaC,GAEb,IAAMM,EAAUiH,IAAWvH,GAE3BQ,EAASH,EAAeC,OAEzBuG,OAAM,SAAAC,GAAG,OACRtG,EAAS,CACPrB,KHtCkB,aGuClBC,QAAS0H,EAAIC,SAASjD,aSoGfwB,CAGb2B,G,SCvHa3B,gBAHS,SAAArG,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAECsG,EAlBM,SAAC,GAAD,IAAcf,EAAd,EAAGiD,UAAsBxI,EAAzB,EAAyBA,KAASyI,EAAlC,4CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAnE,GAAK,OACc,IAAzBvE,EAAKJ,gBACH,kBAAC2F,EAAchB,GAEf,kBAAC,IAAD,CAAUwB,GAAG,kBCNf4C,G,4MACJ7C,cAAgB,SAAAvC,GACdA,EAAEO,iBACF,EAAKS,MAAMhD,c,uDAEH,IACA1B,EAAS2E,KAAKD,MAAMvE,KAApBH,KACR,OAGE,6BAASgC,UAAU,oGAAoG4D,GAAG,gBACxH,yBAAK5D,UAAU,aAEb,yBAAKA,UAAU,iDACf,yBAAKA,UAAU,aACf,wBAAIA,UAAU,gBAAd,cAAyChC,EAAKkC,MAE9C,yBAAKF,UAAU,eACT,uBAAGA,UAAU,QAAb,mCACmC,IACjC,sCAFF,qBAIA,4BAAQA,UAAU,sCAAsCwE,QAAS7B,KAAKsB,eAAtE,YAKN,kBAAC,IAAD,CAAMC,GAAG,SACP,yBAAKlE,UAAU,+BACb,0BAAM3B,OAAO,IAAI2B,UAAU,+BACzB,wBAAIA,UAAU,yBAAd,mBACA,yBAAKA,UAAU,cACb,4BACE,wCACA,6CAOV,kBAAC,IAAD,CAAMkE,GAAG,SACP,yBAAKlE,UAAU,+BACb,0BAAM3B,OAAO,IAAI2B,UAAU,+BACzB,wBAAIA,UAAU,yBAAd,mBACA,yBAAKA,UAAU,cACb,4BACE,wCACA,oD,GAhDI0D,aAoETe,gBAHS,SAAArG,GAAK,MAAK,CAChCD,KAAMC,EAAMD,QAIZ,CAAEuB,cAFW+E,CAGbqC,ICZaC,GA/DE,WACf,OACA,oCAGE,6BAAS/G,UAAU,oGAAoG4D,GAAG,gBACxH,yBAAK5D,UAAU,aACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,gBAAd,iBACA,yBAAKA,UAAU,eACb,uBAAGA,UAAU,QAAb,0EAKJ,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,uCAEb,0BAAM3B,OAAO,IAAI2B,UAAU,+BACzB,wBAAIA,UAAU,uBAAd,yBACA,yBAAKA,UAAU,YACb,+BAAO,2BAAO1B,KAAK,WAAWkD,MAAM,aAGtC,yBAAKxB,UAAU,YACb,+BAAO,2BAAO1B,KAAK,WAAWkD,MAAM,aAGtC,yBAAKxB,UAAU,YACb,+BAAO,2BAAO1B,KAAK,WAAWkD,MAAM,WAGtC,yBAAKxB,UAAU,YACb,+BAAO,2BAAO1B,KAAK,WAAWkD,MAAM,YAGtC,yBAAKxB,UAAU,YACb,+BAAO,2BAAO1B,KAAK,WAAWkD,MAAM,aAGtC,yBAAKxB,UAAU,YACb,+BAAO,2BAAO1B,KAAK,WAAWkD,MAAM,aAItC,yBAAKxB,UAAU,cACb,2BAAO1B,KAAK,SAAS0B,UAAU,gEAAgEwB,MAAM,iBCXtGwF,GArCD,WACZ,OACA,oCAGE,6BAAShH,UAAU,oGAAoG4D,GAAG,gBACxH,yBAAK5D,UAAU,aACb,yBAAKA,UAAU,iDACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,gBAAd,SACA,yBAAKA,UAAU,iBAGjB,yBAAKA,UAAU,aAEf,yBAAKA,UAAU,uCAEb,0BAAM3B,OAAO,IAAI2B,UAAU,+BACzB,wBAAIA,UAAU,yBAAd,cACA,ipCCAd,GAAIJ,aAAaqH,SAAU,CAEzB,IAAM9H,GAAQS,aAAaqH,SAC3B/H,EAAaC,IAEb,IAAMM,GAAUiH,IAAWvH,IAE3BR,EAAMgB,SAASH,EAAeC,KAE9B,IAAMyH,GAActF,KAAKuF,MAAQ,IAC7B1H,GAAQ2H,IAAMF,KAEhBvI,EAAMgB,SAASD,KAEfV,OAAOqI,SAAStD,KAAO,WA0BZuD,OAtBf,WACE,OACE,kBAAC,IAAD,CAAU3I,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKqB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOuH,OAAK,EAACC,KAAK,IAAIb,UAAWjC,IACjC,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,SAASb,UAAWP,KACtC,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,WAAWb,UAAWhD,IAExC,kBAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,SAASb,UAAWK,KACtC,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcO,OAAK,EAACC,KAAK,aAAab,UAAWG,KACjD,kBAAC,GAAD,CAAcS,OAAK,EAACC,KAAK,QAAQb,UAAWlE,IAC5C,kBAAC,GAAD,CAAc8E,OAAK,EAACC,KAAK,YAAYb,UAAWI,UCzCxCU,QACW,cAA7BzI,OAAOqI,SAASK,UAEe,UAA7B1I,OAAOqI,SAASK,UAEhB1I,OAAOqI,SAASK,SAASC,MACvB,2DCZNC,IAASf,OACP,kBAAC,IAAMgB,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpC,MAAK,SAAAqC,GACJA,EAAaC,gBAEdpC,OAAM,SAAAT,GACLxE,QAAQwE,MAAMA,EAAM5E,a","file":"static/js/main.9d35de06.chunk.js","sourcesContent":["import { SET_CURRENT_USER, USER_LOADING } from '../actions/types';\n\nconst isEmpty = require('is-empty');\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nexport default store;","import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};","import React from \"react\";\nimport \"./style.css\"\n\n\nfunction UserPanel({activeUsers}) {\n  //console.log(activeUsers)\n  return (\n    <div>\n\n    <div className=\"inbox_chat scroll\">\n        <div className=\"chat_list\">\n        <div className=\"chat_people\">\n        <div className=\"chat_ib\">\n                   \n          {activeUsers.map((name,i) => (\n                    <h5>{name}</h5>\n                    ))\n                  } \n          \n          \n        {/* <h5>Chuck Norris <span className=\"chat_date\">May 12</span></h5>\n                    <p>This is a phrase about Mr.Norris</p> */}\n              \n\n          \n\n\n\n              {/* <h1>Active users:</h1>\n              {activeUsers.length===0 ?\n                <h3>No active users currently</h3>\n                :\n                <ul className=\"list-unstyled\">\n                  {activeUsers.map((name,i) => (\n                    <li key={name+\"__key__\"+i} >{name}</li>\n                    ))\n                  }\n                </ul>\n              } */}\n              </div>\n              </div>\n        </div>  \n    </div>\n    \n    </div>\n  );\n}\n\nexport default UserPanel;","import React from \"react\";\nimport \"./style.css\"\n\nfunction ChatLog({messageLog}) {\n  //console.log(messageLog)\n  return (\n    <div>\n    {messageLog===[] ?\n      <div className=\"no-msgs\">No messages currently</div>\n      :\n      <ul>\n      {messageLog.map((messageItem, ind) =>\n      // switch for if userName is empty (automated room message)\n        messageItem.userName===\"\" ?\n        <li key={ind}>{messageItem.message}</li>\n        :\n        <li key={ind}>{messageItem.userName}: {messageItem.message}</li>\n        )\n      }\n      </ul>\n    }\n    </div>\n  );\n}\n\nexport default ChatLog;","import React, { useState } from \"react\";\nimport \"./style.css\"\n\nconst TYPING_TIMER_LENGTH = 800; // ms\nlet typing = false;\nlet lastTypingTime;\n\nconst sendMessage = (userName, message, socket) => {\n  // if there is a non-empty message // and a socket connection\n  if (message)\n    // tell server to execute 'new message' and send along one parameter\n    console.log(\"new message\", userName, message)\n    socket.emit('new message', JSON.stringify({\n      userName: userName,\n      message: message\n    }));\n}\n\n// Updates the typing event\nconst updateTypingStatus = (socket) => {\n  if (!typing) {\n    typing = true;\n    console.log(\"typing\")\n    socket.emit('typing');\n  }\n  lastTypingTime = (new Date()).getTime();\n\n  setTimeout(() => {\n    console.log(\"stop typing\")\n    var typingTimer = (new Date()).getTime();\n    var timeDiff = typingTimer - lastTypingTime;\n    if (timeDiff >= TYPING_TIMER_LENGTH && typing) {\n      socket.emit('stop typing');\n      typing = false;\n    }\n  }, TYPING_TIMER_LENGTH);\n}\n\n\nfunction InputArea({userName, socket }) {\n  const [message, setMessage] = useState('');\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      //console.log(\"SUBMIT\")\n      e.preventDefault();\n      sendMessage(userName, message, socket);\n      typing = false;\n      socket.emit(\"stop typing\");\n      setMessage(\"\")\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    sendMessage(userName, message, socket);\n    typing = false;\n    socket.emit(\"stop typing\");\n    setMessage(\"\")\n  };\n\n  const handleMessageChange = (e) => {\n    //console.log(\"CHANGE\");\n    socket.emit(\"typing\")\n    setMessage(e.target.value);\n    updateTypingStatus(socket)\n  }\n\n  return (\n    <div className=\"type_msg\">\n              <div className=\"input_msg_write\">\n                <input type=\"text\" className=\"write_msg\" placeholder=\"Type a message\" value={message} onChange={handleMessageChange} onSubmit={handleSubmit} onKeyPress={handleKeyPress}/>\n                <button className=\"msg_send_btn\" type=\"button\"><i className=\"fa fa-paper-plane\" aria-hidden=\"true\" /></button>\n              </div>\n            </div>\n  );\n}\n\nexport default InputArea;","import React from \"react\";\nimport \"./style.css\"\nimport ChatLog from \"../ChatLog\"\nimport InputArea from \"../InputArea\"\n\nfunction ChatWindow({ userName, groupName, messageLog, socket }) {\n\n  return (\n    <div>\n    <div className=\"mesgs\">\n      <div className=\"msg_history\">\n        <ChatLog messageLog={messageLog}/>\n        <InputArea userName={userName} socket={socket}/>\n      </div>\n    </div>\n     \n    </div>\n  );\n}\n\nexport default ChatWindow;","import React from \"react\";\nimport openSocket from 'socket.io-client';\nimport \"./style.css\"\nimport UserPanel from \"../UserPanel\"\nimport ChatWindow from \"../ChatWindow\"\n\nconst socket = openSocket('http://localhost:8001');\n\nlet connected = false;\nlet reconnect_attempt = 0;\n\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.state = {\n    //   timestamp: 'no timestamp yet',\n    // }\n    this.state = {\n      activeUsers: [this.props.userName],\n      messageLog: [],\n    };\n  }\n\n  getParticipantsMessage() {\n    let message = '';\n    if (this.state.activeUsers.length === 1) {\n      message += \"Flying solo for now.\";\n    } else {\n      message += \"There are \" + this.state.activeUsers.length + \" participants\";\n    }\n    return message;\n  }\n\n  addChatTyping() {\n    // if last message is not user typing, add it\n    let message = \"someone is typing...\";\n    let ml = this.state.messageLog;\n    if (ml.length === 0){\n      this.setState({...this.state, messageLog: [{userName: \"\", message: \"someone is typing...\"}]})\n    }\n    else if (ml[ml.length-1].message !== message)\n      this.setState({...this.state, messageLog: [...this.state.messageLog, {userName: \"\", message: message}]})\n  }\n\n  removeChatTyping() {\n    // if last message is user typing, remove it\n    let message = \"someone is typing...\";\n    let ml = this.state.messageLog;\n    //console.log(\"RM\",ml)\n    if (ml.length === 0){\n      this.setState({...this.state, messageLog: []})\n    }\n    else if (ml[ml.length-1].message === message){\n      this.setState({...this.state, messageLog: [...ml.slice(0,ml.length-1)]})\n    }\n    //console.log(\"RM1.5\",[...ml.slice(0,ml.length-1)])\n    //console.log(\"RM2\",this.state.messageLog)\n  }\n\n  componentDidMount() {\n    // socket.on('timer', (data) => {\n    //   console.log(data)\n    //   this.setState({\n    //     timestamp: data\n    //   });\n    // })\n\n    // socket.emit('subscribeToTimer', 1000);\n\n    // tell server we are logging in\n    socket.emit('add user', this.props.userName);\n\n    // set up all of the socket data receives and update the state\n\n    socket.on('login', (data) => {\n      // data should have active users, previous messages and we should set that to the state below\n      console.log(\"MSG LOG\",data.messageLog)\n      connected = true;\n      // Display the welcome message\n      let message = `Welcome to ${this.props.groupName}`;\n      let welcomeMessage = this.getParticipantsMessage();\n      if (!data.messageLog){\n        data.messageLog = []\n      }\n      this.removeChatTyping()\n      console.log(\"LOGGED IN\")\n      this.setState({activeUsers: data.activeUsers, messageLog: [...data.messageLog, {userName: \"\", message: message}, {userName: \"\", message: welcomeMessage}]});\n\n      // ALSO NEED TO set userNames, log history\n      // this.setState({...this.state, activeUsers: data.activeUsers messageLog: data.messageLog})\n    });\n\n    // Whenever the server emits 'new message', update the chat body\n    socket.on('new message', (data) => {\n      // should be passing object with userName and message\n      data = JSON.parse(data);\n      this.removeChatTyping()\n      this.setState({...this.state, messageLog: [...this.state.messageLog, {userName: data.userName, message: data.message}]});\n    });\n\n    // Whenever the server emits 'user joined', log it in the chat body and update the user list\n    socket.on('user joined', (data) => {\n      data = JSON.parse(data);\n      console.log(\"user joined\")\n      let message = data.userName + ' joined';\n      this.removeChatTyping()\n      this.setState({...this.state, activeUsers: [...this.state.activeUsers, data.userName], messageLog: [...this.state.messageLog, {userName: \"\", message: message}]});\n    });\n\n    // Whenever the server emits 'user left', log it in the chat body\n    socket.on('user left', (data) => {\n      // TO DO: data should say who has left, and we should update the user list\n      console.log(\"user left\")\n      data = JSON.parse(data);\n      let message = data.userName + ' left';\n      let users = this.state.activeUsers.filter(function(value){ return value !== data.userName;});\n      this.removeChatTyping()\n      this.setState({...this.state, activeUsers: users, messageLog: [...this.state.messageLog, {userName: \"\", message: message}]})\n    });\n\n    // Whenever the server emits 'typing', show the typing message\n    socket.on('typing', (userName) => {\n      this.addChatTyping(userName);\n    });\n\n    // Whenever the server emits 'stop typing', kill the typing message\n    socket.on('stop typing', (userName) => {\n      this.removeChatTyping(userName);\n    });\n\n    socket.on('disconnect', () => {\n      let message = 'you have been disconnected';\n      this.setState({...this.state, messageLog: [...this.state.messageLog, {userName: \"\", message: message}]})\n    });\n\n    socket.on('reconnect', (data) => {\n      // pull last N messages and populate chat log (cannot just wait for new messages since we may have missed some)\n      let message = 'you have been reconnected';\n      reconnect_attempt = 0;\n      this.setState({...this.state, messageLog: [...this.state.messageLog, {userName: \"\", message: message}]})\n      if (this.props.userName) {\n        socket.emit('add user', this.props.userName);\n      }\n    });\n\n    socket.on('reconnect_error', () => {\n      let message = 'attempt to reconnect has failed';\n      reconnect_attempt += 1;\n      if (reconnect_attempt<5)\n        this.setState({...this.state, messageLog: [...this.state.messageLog, {userName: \"\", message: message}]})\n    });\n\n  }\n\n  //groupName\n  //userName\n  //userStatus\n  //userList\n  //userStatusList\n  //message\n  //messageLog\n  //userInput\n\n  render() {\n    return (\n      <div className=\"App\">\n        <UserPanel activeUsers={this.state.activeUsers}/>\n        <ChatWindow groupName={this.props.groupName} userName={this.props.userName} connected={connected} socket={socket} messageLog={this.state.messageLog} />\n      </div>\n    );\n  }\n}\n\nexport default Chat;","import React from \"react\";\nimport \"./Profile.css\";\n\nfunction Profile() {\n  return (\n\n<section className=\"pb_cover overflow-hidden cover-bg-indigo cover-bg-opacity text-left pb_gradient_v1 pb_slant-light\" id=\"section-home\">\n      <div className=\"container\">\n      <div className=\"row align-items-center justify-content-center\">\n      <div className=\"col-12\">\n\n      <div className=\"container bootstrap-snippet header-container\">\n        <div className=\"bg-white\">\n          <div className=\"container py-5\">\n            <div className=\"media col-md-10 col-lg-8 col-xl-7 p-0 my-4 mx-auto\">\n              <img src=\"https://cache.desktopnexus.com/thumbseg/623/623778-bigthumbnail.jpg\" alt=\"\" className=\"img-fluid rounded-circle\" />\n              <div className=\"media-body ml-5\">\n                <h4 className=\"font-weight-bold mb-4\">Chuck Norris</h4>\n                <div className=\"text-muted mb-4\">\n                Carlos Ray \"Chuck\" Norris (born March 10, 1940) is an American martial artist, actor, film producer and screenwriter. After serving in the United States Air Force, Norris won many martial arts championships and later founded his own discipline, Chun Kuk Do\n                </div>\n                <a href=\"#\" className=\"d-inline-block text-dark\">\n                  <strong>777</strong>\n                  <span className=\"text-muted\">followers</span>\n                </a>\n                <a href=\"#\" className=\"d-inline-block text-dark ml-3\">\n                  <strong>111</strong>\n                  <span className=\"text-muted\">following</span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <hr className=\"m-0\" />\n          <ul className=\"nav nav-tabs tabs-alt justify-content-center\">\n            <li className=\"nav-item\">\n              <a className=\"nav-link py-4\" href=\"/\">Chats</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link py-4\" href=\"/\">Suggestions</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link py-4\" href=\"/\">Followers</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link py-4\" href=\"/\">Following</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n        </div>\n        </div>\n      </div>\n\n    </section>\n\n  );\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\n\n\nclass Navbar extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark pb_navbar pb_scrolled-light\" id=\"pb-navbar\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">Gather</Link>\n          <button className=\"navbar-toggler ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsingNavbar\" aria-controls=\"probootstrap-navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span><i className=\"ion-navicon\"></i></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"collapsingNavbar\" >\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/\">Contact</Link></li>\n              <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/about\">About us</Link></li>\n              <li className=\"nav-item\"><Link className=\"nav-link\" to=\"/profile\">Profile</Link></li>\n              {\n                this.props.auth.isAuthenticated === true\n                ?\n                  <li className=\"nav-item cta-btn ml-xl-2 ml-lg-2 ml-md-0 ml-sm-0 ml-0\" onClick={this.onLogoutClick}>\n                    <Link className=\"nav-link\" to=\"/login\">\n                      <span className=\"pb_rounded-4 px-4\">Logout</span>\n                    </Link>\n                  </li>\n                :\n                  <li className=\"nav-item cta-btn ml-xl-2 ml-lg-2 ml-md-0 ml-sm-0 ml-0\">\n                    <Link className=\"nav-link\" to=\"/login\">\n                      <span className=\"pb_rounded-4 px-4\">Sign in</span>\n                    </Link>\n                  </li>\n                }\n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar);","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    }\n\n    this.props.registerUser(newUser, this.props.history);\n  }\n\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <section className=\"pb_cover overflow-hidden cover-bg-indigo cover-bg-opacity text-left pb_gradient_v1 pb_slant-light\" id=\"section-home\">\n      <div className=\"container\">\n        <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-md-6\">\n            <h2 className=\"heading mb-3\">Gather together!</h2>\n            <div className=\"sub-heading\">\n              <p className=\"mb-4\">\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Enim fuga repellendus impedit, repellat deleniti, ipsum nobis quia debitis perspiciatis beatae obcaecati dolorem, architecto fugit quas. Totam sapiente quia maiores quisquam?\n              </p>\n              <p className=\"mb-5\"><Link className=\"btn btn-success btn-lg pb_btn-pill\" to=\"/login\" ><span className=\"pb_font-14 text-uppercase pb_letter-spacing-1\">Sign in</span></Link></p>\n            </div>\n          </div>\n          <div className=\"col-md-1\">\n          </div>\n          <div className=\"col-md-5 relative align-self-center\">\n            <form noValidate className=\"bg-white rounded pb_form_v1\" onSubmit={this.handleSubmit}>\n              <h2 className=\"mb-4 mt-0 text-center\">Sign Up for Free</h2>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Full name\"\n                  onChange={this.handleChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames('form-control pb_height-50 reverse', {\n                    invalid: errors.name\n                  })}\n                />\n                <span style={{color: 'red'}}>{errors.name}</span>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  onChange={this.handleChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames('form-control pb_height-50 reverse', {\n                    invalid: errors.email\n                  })}\n                />\n                <span style={{color: 'red'}}>{errors.email}</span>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.handleChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames('form-control pb_height-50 reverse', {\n                    invalid: errors.password\n                  })}\n                />\n                <span style={{color: 'red'}}>{errors.password}</span>\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Confirm password\"\n                  onChange={this.handleChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames('form-control pb_height-50 reverse', {\n                    invalid: errors.password2\n                  })}\n                />\n                <span style={{color: 'red'}}>{errors.password2}</span>\n              </div>\n              <div className=\"form-group\">\n\n            <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block pb_btn-pill  btn-shadow-blue\">Register</button>\n              </div>\n            </form>\n          </div>\n          </div>\n      </div>\n      </section>\n    )\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/authActions';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    }\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      // Push user to dashboard when they login...\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  handleChange = event => {\n    this.setState({ [event.target.id]: event.target.value });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password,\n    }\n\n    this.props.loginUser(userData);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <>\n\n\n\n<section className=\"pb_cover overflow-hidden cover-bg-indigo cover-bg-opacity text-left pb_gradient_v1 pb_slant-light\" id=\"section-home\">\n      <div className=\"container\">\n        <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-md-6\">\n            <h2 className=\"heading mb-3\">Glad to have you back!</h2>\n            \n            <div className=\"sub-heading\">\n              <p className=\"mb-4\">\n              Don't have an account?\n              <Link className=\" mb-4 \" to=\"/\"><span className=\"pb_font-14 text-white pb_letter-spacing-1\">Register one!</span></Link>\n              </p>\n              </div>\n          </div>\n          <div className=\"col-md-1\">\n          </div>\n\n          <div className=\"col-md-5 relative align-self-center\">\n\n            <form  className=\"bg-white rounded pb_form_v1\" noValidate onSubmit={this.handleSubmit}>\n              <h2 className=\"mb-4 mt-0 text-center\">Sign In</h2>\n             \n              <div className=\"form-group\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n              onChange={this.handleChange}\n              value={this.state.email}\n              error={errors.email}\n              id=\"email\"\n              type=\"email\"\n              className={classnames('form-control pb_height-50 reverse', {\n                invalid: errors.email || errors.emailnotfound\n              })}\n            />\n             <span style={{color: 'red'}}>{errors.email}{errors.emailnotfound}</span>\n                </div>\n              <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n              onChange={this.handleChange}\n              value={this.state.password}\n              error={errors.password}\n              id=\"password\"\n              type=\"password\"\n              className={classnames('form-control pb_height-50 reverse', {\n                invalid: errors.password || errors.passwordincorrect\n              })}\n            />\n            <span style={{color: 'red'}}>{errors.password}{errors.passwordincorrect}</span>\n          </div>\n               \n             \n              <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block pb_btn-pill  btn-shadow-blue\">Login</button>\n\n              </div>\n            </form>\n\n          </div>\n        </div>\n      </div>\n    </section>\n\n\n\n\n  \n      </>\n    )\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../actions/authActions';\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  render() {\n    const { user } = this.props.auth;\n    return (\n\n\n      <section className=\"pb_cover overflow-hidden cover-bg-indigo cover-bg-opacity text-left pb_gradient_v1 pb_slant-light\" id=\"section-home\">\n        <div className=\"container\">\n\n          <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-md-12\">\n          <h2 className=\"heading mb-3\">Hey there, {user.name}</h2>\n\n          <div className=\"sub-heading\">\n                <p className=\"mb-4\">\n                  You are logged into a full-stack{\" \"}\n                  <span>MERN</span> app 👏\n                </p>\n                <button className=\"btn btn-success btn-lg pb_btn-pill \" onClick={this.onLogoutClick}>\n                  Logout\n                </button>\n              </div>\n          </div>\n          <Link to=\"/chat\">\n            <div className=\"col-sm-3  align-self-center\">\n              <form action=\"#\" className=\"bg-light rounded pb_form_v1\">\n                <h2 className=\"mb-4 mt-0 text-center\">Chat Category 1</h2>\n                <div className=\"form-group\">\n                  <ul>\n                    <li> 1 stuff</li>\n                    <li> 2 stuff</li>\n                  </ul>\n                </div>\n              </form>\n            </div>\n          </Link>\n\n          <Link to=\"/chat\">\n            <div className=\"col-sm-3  align-self-center\">\n              <form action=\"#\" className=\"bg-light rounded pb_form_v1\">\n                <h2 className=\"mb-4 mt-0 text-center\">Chat Category 1</h2>\n                <div className=\"form-group\">\n                  <ul>\n                    <li> 1 stuff</li>\n                    <li> 2 stuff</li>\n                  </ul>\n                </div>\n              </form>\n            </div>\n          </Link>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);","import React from 'react';\n\nconst Interest = () => {\n  return(\n  <>\n   \n\n    <section className=\"pb_cover overflow-hidden cover-bg-indigo cover-bg-opacity text-left pb_gradient_v1 pb_slant-light\" id=\"section-home\">\n      <div className=\"container\">\n        <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-md-3\">\n            <h2 className=\"heading mb-3\">Almost There!</h2>\n            <div className=\"sub-heading\">\n              <p className=\"mb-4\">\n                Please select the following options that you would be interested in! \n              </p>\n            </div>\n          </div>\n          <div className=\"col-md-1\">\n          </div>\n          <div className=\"col-md-8 relative align-self-center\">\n\n            <form action=\"#\" className=\"bg-white rounded pb_form_v1\">\n              <h2 className=\"mb-4 mt-0 text-left\">Select your Interests</h2>\n              <div className=\"checkbox\">\n                <label><input type=\"checkbox\" value=\"Health\"></input></label>\n              </div>\n              \n              <div className=\"checkbox\">\n                <label><input type=\"checkbox\" value=\"Gaming\"></input></label>\n              </div>\n              \n              <div className=\"checkbox\">\n                <label><input type=\"checkbox\" value=\"Food\"></input></label>\n              </div>\n\n              <div className=\"checkbox\">\n                <label><input type=\"checkbox\" value=\"Music\"></input></label>\n              </div>\n              \n              <div className=\"checkbox\">\n                <label><input type=\"checkbox\" value=\"Movies\"></input></label>\n              </div>\n              \n              <div className=\"checkbox\">\n                <label><input type=\"checkbox\" value=\"Crafts\"></input></label>\n              </div>\n            \n             \n              <div className=\"form-group\">\n                <input type=\"submit\" className=\"btn btn-primary btn-lg btn-block pb_btn-pill  btn-shadow-blue\" value=\"Save\"/>\n              </div>\n            </form>\n\n          </div>\n        </div>\n      </div>\n    </section>\n\n\n\n  </>\n  )\n};\n\nexport default Interest;","import React from 'react';\n\nconst About = () => {\n  return(\n  <>\n   \n\n    <section className=\"pb_cover overflow-hidden cover-bg-indigo cover-bg-opacity text-left pb_gradient_v1 pb_slant-light\" id=\"section-home\">\n      <div className=\"container\">\n        <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-md-3\">\n            <h3 className=\"heading mb-4\">About</h3>\n            <div className=\"sub-heading\">\n            </div>\n          </div>\n          <div className=\"col-md-1\">\n          </div>\n          <div className=\"col-md-8 relative align-self-center\">\n\n            <form action=\"#\" className=\"bg-white rounded pb_form_v1\">\n              <h1 className=\"mb-4 mt-0 text-center\">Who we are</h1>\n              <p>\n              Welcome to Gather! A site that connects us to one another through technology and creativity. The importance of social interaction is something that has helped shape who we are as people for as long as we have been around. Year after year, the way we forge relationships with others changes with our lives. We get busy, it becomes difficult to go out and meet people and it can become challenging to find time to have meaningful and fun interactions with like minded people. Gather is here to help with that! Gather is a great platform that brings people who share common interests together, allowing users to connect on a level that is not only fun but also encourages social growth. Connect with users around the country to come together and have in depth discussions about subjects that you care about. Chat with users hundreds of miles away for some simple cooking tips and tricks! Have a conversation with someone in an entirely different place that you would never have thought to have common ground with. Whether you want to share ideas, hobbies, or just want to find people to have a good laugh with, Gather is here to help.\n              </p>\n             \n            \n            </form>\n\n          </div>\n        </div>\n      </div>\n    </section>\n\n\n\n  </>\n  )\n};\n\nexport default About;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport Chat from \"./components/chat/Chat\";\nimport Profile from \"./components/profile/Profile\"\n\nimport './App.css';\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Interest from \"./components/layout/Interest\";\nimport About from \"./components/layout/About\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  // Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/profile\" component={Profile} />\n\n          <Route exact path=\"/about\" component={About} />\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/chat\" component={Chat} />\n            <PrivateRoute exact path=\"/interest\" component={Interest} />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}